//
//  CreateReservationRouter.swift
//  PetGroomerShop
//
//  Created by Lee, Jeongsik on 2019/06/20.
//  Copyright (c) 2019 Lee, Jeongsik. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

@objc protocol CreateReservationRoutingLogic
{
    func routeToListReservations(segue: UIStoryboardSegue?)
    func routeToShowReservation(segue: UIStoryboardSegue?)
}

protocol CreateReservationDataPassing
{
    var dataStore: CreateReservationDataStore? { get }
}

class CreateReservationRouter: NSObject, CreateReservationRoutingLogic, CreateReservationDataPassing
{
    weak var viewController: CreateReservationViewController?
    var dataStore: CreateReservationDataStore?
    
    // MARK: Routing
    
    func routeToListReservations(segue: UIStoryboardSegue?)
    {
        if let segue = segue {
            let destinationVC = segue.destination as! ListReservationsViewController
            var destinationDS = destinationVC.router!.dataStore!
            passDataToListReservations(source: dataStore!, destination: &destinationDS)
        } else {
            let index = viewController!.navigationController!.viewControllers.count - 2
            let destinationVC = viewController?.navigationController?.viewControllers[index] as! ListReservationsViewController
            var destinationDS = destinationVC.router!.dataStore!
            passDataToListReservations(source: dataStore!, destination: &destinationDS)
            navigateToListReservations(source: viewController!, destination: destinationVC)
        }
    }
    
    func routeToShowReservation(segue: UIStoryboardSegue?)
    {
        if let segue = segue {
            let destinationVC = segue.destination as! ShowReservationViewController
            var destinationDS = destinationVC.router!.dataStore!
            passDataToShowReservation(source: dataStore!, destination: &destinationDS)
        } else {
            let index = viewController!.navigationController!.viewControllers.count - 2
            let destinationVC = viewController?.navigationController?.viewControllers[index] as! ShowReservationViewController
            var destinationDS = destinationVC.router!.dataStore!
            passDataToShowReservation(source: dataStore!, destination: &destinationDS)
            navigateToShowReservation(source: viewController!, destination: destinationVC)
        }
    }
    
    // MARK: Navigation
    
    func navigateToListReservations(source: CreateReservationViewController, destination: ListReservationsViewController)
    {
        source.navigationController?.popViewController(animated: true)
    }
    
    func navigateToShowReservation(source: CreateReservationViewController, destination: ShowReservationViewController)
    {
        source.navigationController?.popViewController(animated: true)
    }
    
    // MARK: Passing data
    
    func passDataToListReservations(source: CreateReservationDataStore, destination: inout ListReservationsDataStore)
    {
    }
    
    func passDataToShowReservation(source: CreateReservationDataStore, destination: inout ShowReservationDataStore)
    {
        destination.reservation = source.reservationToEdit
    }
}

